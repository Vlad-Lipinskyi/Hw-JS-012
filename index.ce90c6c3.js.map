{"mappings":"ACyCA,IAzCA,MACE,YAAY,CAAO,CAAE,CACnB,IAAI,CAAC,QAAQ,CAAG,EAAQ,QAAQ,CAChC,IAAI,CAAC,UAAU,CAAG,EAAQ,UAAU,CACpC,IAAI,CAAC,YAAY,CAAG,SAAS,aAAa,CAAC,IAAI,CAAC,QAAQ,EACxD,IAAI,CAAC,MAAM,CAAG,CACZ,KAAM,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,uBACtC,MAAO,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,wBACvC,KAAM,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,uBACtC,KAAM,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,sBACxC,EACA,IAAI,CAAC,KAAK,EACZ,CAEA,OAAQ,CACN,IAAI,CAAC,QAAQ,CAAG,YAAY,KAC1B,IAAM,EAAc,IAAI,KAClB,EAAO,IAAI,CAAC,UAAU,CAAG,EAE/B,GAAI,GAAQ,EACV,cAAc,IAAI,CAAC,QAAQ,EAC3B,IAAI,CAAC,WAAW,CAAC,EAAG,EAAG,EAAG,OACrB,CACL,IAAM,EAAO,KAAK,KAAK,CAAC,EAAQ,OAC1B,EAAQ,KAAK,KAAK,CAAE,EAAQ,MAAyB,MACrD,EAAO,KAAK,KAAK,CAAE,EAAQ,KAAoB,KAC/C,EAAO,KAAK,KAAK,CAAE,EAAQ,IAAc,KAE/C,IAAI,CAAC,WAAW,CAAC,EAAM,EAAO,EAAM,EACtC,CACF,EAAG,IACL,CAEA,YAAY,CAAI,CAAE,CAAK,CAAE,CAAI,CAAE,CAAI,CAAE,CACnC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAG,EAC/B,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,WAAW,CAAG,OAAO,GAAO,QAAQ,CAAC,EAAG,KAC1D,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAG,OAAO,GAAM,QAAQ,CAAC,EAAG,KACxD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAG,OAAO,GAAM,QAAQ,CAAC,EAAG,IAC1D,CACF,EAEmB,CACjB,SAAU,WACV,WAAY,IAAI,KAAK,wBACvB","sources":["<anon>","src/index.js"],"sourcesContent":["var $35da740d59af89ba$exports = {};\nclass $35da740d59af89ba$var$CountdownTimer {\n    constructor(options){\n        this.selector = options.selector;\n        this.targetDate = options.targetDate;\n        this.timerElement = document.querySelector(this.selector);\n        this.fields = {\n            days: this.timerElement.querySelector('[data-value=\"days\"]'),\n            hours: this.timerElement.querySelector('[data-value=\"hours\"]'),\n            mins: this.timerElement.querySelector('[data-value=\"mins\"]'),\n            secs: this.timerElement.querySelector('[data-value=\"secs\"]')\n        };\n        this.start();\n    }\n    start() {\n        this.interval = setInterval(()=>{\n            const currentTime = new Date();\n            const time = this.targetDate - currentTime;\n            if (time <= 0) {\n                clearInterval(this.interval);\n                this.updateTimer(0, 0, 0, 0);\n            } else {\n                const days = Math.floor(time / 86400000);\n                const hours = Math.floor(time % 86400000 / 3600000);\n                const mins = Math.floor(time % 3600000 / 60000);\n                const secs = Math.floor(time % 60000 / 1000);\n                this.updateTimer(days, hours, mins, secs);\n            }\n        }, 1000);\n    }\n    updateTimer(days, hours, mins, secs) {\n        this.fields.days.textContent = days;\n        this.fields.hours.textContent = String(hours).padStart(2, \"0\");\n        this.fields.mins.textContent = String(mins).padStart(2, \"0\");\n        this.fields.secs.textContent = String(secs).padStart(2, \"0\");\n    }\n}\nnew $35da740d59af89ba$var$CountdownTimer({\n    selector: \"#timer-1\",\n    targetDate: new Date(\"Jul 17, 2025 00:00:00\")\n});\n\n\n//# sourceMappingURL=index.ce90c6c3.js.map\n","class CountdownTimer {\r\n  constructor(options) {\r\n    this.selector = options.selector;\r\n    this.targetDate = options.targetDate;\r\n    this.timerElement = document.querySelector(this.selector);\r\n    this.fields = {\r\n      days: this.timerElement.querySelector('[data-value=\"days\"]'),\r\n      hours: this.timerElement.querySelector('[data-value=\"hours\"]'),\r\n      mins: this.timerElement.querySelector('[data-value=\"mins\"]'),\r\n      secs: this.timerElement.querySelector('[data-value=\"secs\"]')\r\n    };\r\n    this.start();\r\n  }\r\n\r\n  start() {\r\n    this.interval = setInterval(() => {\r\n      const currentTime = new Date();\r\n      const time = this.targetDate - currentTime;\r\n\r\n      if (time <= 0) {\r\n        clearInterval(this.interval);\r\n        this.updateTimer(0, 0, 0, 0); \r\n      } else {\r\n        const days = Math.floor(time / (1000 * 60 * 60 * 24));\r\n        const hours = Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n        const mins = Math.floor((time % (1000 * 60 * 60)) / (1000 * 60));\r\n        const secs = Math.floor((time % (1000 * 60)) / 1000);\r\n\r\n        this.updateTimer(days, hours, mins, secs);\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  updateTimer(days, hours, mins, secs) {\r\n    this.fields.days.textContent = days;\r\n    this.fields.hours.textContent = String(hours).padStart(2, \"0\");\r\n    this.fields.mins.textContent = String(mins).padStart(2, \"0\");\r\n    this.fields.secs.textContent = String(secs).padStart(2, \"0\");\r\n  }\r\n}\r\n\r\nnew CountdownTimer({\r\n  selector: \"#timer-1\",\r\n  targetDate: new Date(\"Jul 17, 2025 00:00:00\")\r\n});\r\n"],"names":["constructor","options","selector","targetDate","timerElement","document","querySelector","fields","days","hours","mins","secs","start","interval","setInterval","currentTime","Date","time","clearInterval","updateTimer","Math","floor","textContent","String","padStart"],"version":3,"file":"index.ce90c6c3.js.map"}